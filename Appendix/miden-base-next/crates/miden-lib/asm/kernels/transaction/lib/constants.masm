# CONSTANTS
# =================================================================================================

# The number of elements in a Word
const.WORD_SIZE=4

# The maximum number of input values associated with a single note.
const.MAX_INPUTS_PER_NOTE=128

# The maximum number of assets that can be stored in a single note.
const.MAX_ASSETS_PER_NOTE=256

# The maximum number of notes that can be consumed in a single transaction.
const.MAX_INPUT_NOTES_PER_TX=1024

# The size of the memory segment allocated to each note.
const.NOTE_MEM_SIZE=2048

# The depth of the Merkle tree used to commit to notes produced in a block.
const.NOTE_TREE_DEPTH=16

# The maximum number of notes that can be created in a single transaction.
const.MAX_OUTPUT_NOTES_PER_TX=1024

#Â TYPES
# =================================================================================================

# Type of storage slot item in the account storage
const.STORAGE_SLOT_TYPE_VALUE=0
const.STORAGE_SLOT_TYPE_MAP=1
const.STORAGE_SLOT_TYPE_ARRAY=2

# PROCEDURES
# =================================================================================================

#! Returns the number of elements in a Word.
#!
#! Inputs:  []
#! Outputs: [word_size]
#!
#! Where:
#! - word_size is the number of elements in a Word.
export.get_word_size
    push.WORD_SIZE
end

#! Returns the max allowed number of input values per note.
#!
#! Inputs:  []
#! Outputs: [max_inputs_per_note]
#!
#! Where:
#! - max_inputs_per_note is the max inputs per note.
export.::kernel::util::note::get_max_inputs_per_note

#! Returns the max allowed number of assets per note.
#!
#! Inputs:  []
#! Outputs: [max_assets_per_note]
#!
#! Where:
#! - max_assets_per_note is the max assets per note.
export.get_max_assets_per_note
    push.MAX_ASSETS_PER_NOTE
end

#! Returns the maximum number of notes that can be consumed in a single transaction.
#!
#! Inputs:  []
#! Outputs: [max_num_input_notes]
#!
#! Where:
#! - max_num_input_notes is the max number of input notes.
export.get_max_num_input_notes
    push.MAX_INPUT_NOTES_PER_TX
end

#! Returns the size of the memory segment allocated to each note.
#!
#! Inputs:  []
#! Outputs: [note_mem_size]
#!
#! Where:
#! - note_mem_size is the size of the memory segment allocated to each note.
export.get_note_mem_size
    push.NOTE_MEM_SIZE
end

#! Returns the depth of the Merkle tree used to commit to notes produced in a block.
#!
#! Inputs:  []
#! Outputs: [note_tree_depth]
#!
#! Where:
#! - note_tree_depth is the depth of the Merkle tree used to commit to notes produced in a block.
export.get_note_tree_depth
    push.NOTE_TREE_DEPTH
end

#! Returns the maximum number of notes that can be created in a single transaction.
#!
#! Inputs:  []
#! Outputs: [max_num_output_notes]
#!
#! Where:
#! - max_num_output_notes is the max number of notes that can be created in a single transaction.
export.get_max_num_output_notes
    push.MAX_OUTPUT_NOTES_PER_TX
end

#! Returns the root of an empty Sparse Merkle Tree.
#!
#! Inputs:  []
#! Outputs: [EMPTY_SMT_ROOT]
#!
#! Where:
#! - EMPTY_SMT_ROOT is the root of an empty Sparse Merkle Tree.
export.get_empty_smt_root
    push.15321474589252129342.17373224439259377994.15071539326562317628.3312677166725950353
end

#! Returns the type of storage slot value in the account storage.
#!
#! Inputs:  []
#! Outputs: [type_storage_value]
#!
#! Where:
#! - type_storage_value is the type of storage slot item in the account storage.
export.get_storage_slot_type_value
    push.STORAGE_SLOT_TYPE_VALUE
end

#! Returns the type of storage slot map in the account storage.
#!
#! Inputs:  []
#! Outputs: [type_storage_map]
#!
#! Where:
#! - type_storage_map is the type of storage slot item in the account storage.
export.get_storage_slot_type_map
    push.STORAGE_SLOT_TYPE_MAP
end

#! Returns the type of storage slot array in the account storage.
#!
#! Inputs:  []
#! Outputs: [type_storage_array]
#!
#! Where:
#! - type_storage_array is the type of storage slot item in the account storage.
export.get_storage_slot_type_array
    push.STORAGE_SLOT_TYPE_ARRAY
end
