// Specification of the user facing gRPC API.
syntax = "proto3";
package proving_service;

service Api {
    // Generates a proof for the requested payload.
    rpc Prove(ProvingRequest) returns (ProvingResponse) {}
}

// Enumeration of supported proof types.
enum ProofType {
    // Proof for a single transaction.
    TRANSACTION = 0;

    // Proof covering a batch of transactions.
    BATCH = 1;

    // Proof for entire block validity.
    BLOCK = 2;
}

// Request message for proof generation containing payload and proof type metadata.
message ProvingRequest {
    // Type of proof being requested, determines payload interpretation
    ProofType proof_type = 1;

    // Serialized payload requiring proof generation. The encoding format is
    // type-specific:
    // - TRANSACTION: TransactionWitness encoded.
    // - BATCH: ProposedBatch encoded.
    // - BLOCK: ProposedBlock encoded.
    bytes payload = 2;
}

// Response message containing the generated proof.
message ProvingResponse {
    // Serialized proof bytes.
    // - TRANSACTION: Returns an encoded ProvenTransaction.
    // - BATCH: Returns an encoded ProvenBatch.
    // - BLOCK: Returns an encoded ProvenBlock.
    bytes payload = 1;
}
